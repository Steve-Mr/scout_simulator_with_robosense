export declare type XmlrpcCallOptions = {
    maxAttempts?: number;
};
export interface XmlrpcCall<TReq extends unknown[] = unknown[], TResp extends unknown[] = unknown[]> {
    Req: TReq;
    Resp: TResp;
}
export declare namespace MasterApi {
    export interface RegisterService {
        Req: [string, string, string, string];
        Resp: [number, string, number];
    }
    export interface UnregisterService {
        Req: [string, string, string];
        Resp: [number, string, number];
    }
    export interface RegisterSubscriber {
        Req: [string, string, string, string];
        Resp: [number, string, string[]];
    }
    export interface UnregisterSubscriber {
        Req: [string, string, string];
        Resp: [number, string, number];
    }
    export interface RegisterPublisher {
        Req: [string, string, string, string];
        Resp: [number, string, string[]];
    }
    export interface UnregisterPublisher {
        Req: [string, string, string];
        Resp: [number, string, number];
    }
    export interface LookupNode {
        Req: [string, string];
        Resp: [number, string, string];
    }
    export interface GetPublishedTopics {
        Req: [string, string];
        Resp: [number, string, [string, string][]];
    }
    export interface GetTopicTypes {
        Req: [string];
        Resp: [number, string, [string, string][]];
    }
    type StateList = [string, string[]][];
    export interface GetSystemState {
        Req: [string];
        Resp: [number, string, [StateList, StateList, StateList]];
    }
    export interface GetUri {
        Req: [string];
        Resp: [number, string, string];
    }
    export interface LookupService {
        Req: [string, string];
        Resp: [number, string, string];
    }
    export {};
}
export declare type BusInfo = [number, string, 'i' | 'o' | 'b', string, string, boolean];
export declare type Protocol = [string, ...any[]];
export declare namespace SlaveApi {
    interface GetBusStats {
        Req: [string];
        Resp: [number, string, any];
    }
    interface GetBusInfo {
        Req: [string];
        Resp: [number, string, BusInfo[]];
    }
    interface GetMasterUri {
        Req: [string];
        Resp: [number, string, string];
    }
    interface Shutdown {
        Req: [string, string];
        Resp: [number, string, number];
    }
    interface GetPid {
        Req: [string];
        Resp: [number, string, number];
    }
    interface GetSubscriptions {
        Req: [string];
        Resp: [number, string, [string, string][]];
    }
    interface GetPublications {
        Req: [string];
        Resp: [number, string, [string, string][]];
    }
    interface ParamUpdate {
        Req: [string, string, any];
        Resp: [number, string, number];
    }
    interface PublisherUpdate {
        Req: [string, string, string[]];
        Resp: [number, string, number];
    }
    interface RequestTopic {
        Req: [string, string, Protocol[]];
        Resp: [number, string, Protocol | []];
    }
}
export declare namespace ParameterServerApi {
    interface DeleteParam {
        Req: [string, string];
        Resp: [number, string, number];
    }
    interface SetParam {
        Req: [string, string, any];
        Resp: [number, string, number];
    }
    interface GetParam {
        Req: [string, string];
        Resp: [number, string, any];
    }
    interface SearchParam {
        Req: [string, string];
        Resp: [number, string, number];
    }
    interface SubscribeParam {
        Req: [string, string, string];
        Resp: [number, string, any];
    }
    interface UnsubscribeParam {
        Req: [string, string, string];
        Resp: [number, string, number];
    }
    interface HasParam {
        Req: [string, string];
        Resp: [number, string, boolean];
    }
    interface GetParamNames {
        Req: [string];
        Resp: [number, string, string[]];
    }
}
export declare type SystemState = {
    publishers: {
        [key: string]: string[];
    };
    subscribers: {
        [key: string]: string[];
    };
    services: {
        [key: string]: string[];
    };
};
export declare type TopicInfo = {
    topics: {
        name: string;
        type: string;
    }[];
};
